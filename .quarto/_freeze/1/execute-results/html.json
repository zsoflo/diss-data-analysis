{
  "hash": "55e9689e87d6b289cea72eef6a89ebd9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Zsofia Flora Hauk's Dissertation\"\nformat: html\n---\n\n\n## Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(data.table)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:lubridate':\n\n    hour, isoweek, mday, minute, month, quarter, second, wday, week,\n    yday, year\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n```\n\n\n:::\n:::\n\n\n## Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiles_dyads <- list.files(\"/Users/zsofiahauk/Desktop/diss_data/dyad_data/\", full.names = TRUE)\ndyads <- read_csv(files_dyads, id = \"file\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 560 Columns: 28\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): participant_id, partner_id, block, trial_class, training_image, tr...\ndbl  (6): trial_index, time_elapsed, target_pos, response, button_number_sel...\nlgl  (1): testing_check\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nfiles_solos <- list.files(\"/Users/zsofiahauk/Desktop/diss_data/solo_data/\", full.names = TRUE)\nsolos <- read_csv(files_solos, id = \"file\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 429 Columns: 27\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): participant_id, block, trial_class, training_image, training_label...\ndbl  (3): trial_index, time_elapsed, target_pos\nlgl  (1): testing_check\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n## Communicative success\n\n# Load data for each pair\n\n#- Load and apply transformation to all dyads' data\n\n\n::: {.cell}\n\n:::\n\n\n# 1. Dyad 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndi_sldmscswrq <- read_csv(\"/Users/zsofiahauk/Desktop/diss_data/dyad_data/di_sldmscswrq.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 56 Columns: 27\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): participant_id, partner_id, block, trial_class, training_image, tr...\ndbl  (6): trial_index, time_elapsed, target_pos, response, button_number_sel...\nlgl  (1): testing_check\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ndi_l9vxw70eas <- read_csv(\"/Users/zsofiahauk/Desktop/diss_data/dyad_data/di_l9vxw70eas.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 56 Columns: 27\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): participant_id, partner_id, block, trial_class, training_image, tr...\ndbl  (6): trial_index, time_elapsed, target_pos, response, button_number_sel...\nlgl  (1): testing_check\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ndi_sld_l9v <- bind_rows(di_sldmscswrq, di_l9vxw70eas) %>% \n  mutate(\n    score = ifelse(target_pos == button_number_selected, \"CORRECT\", \"FALSE\"),\n    score_n = ifelse(target_pos == button_number_selected, 1, 0)\n  )\n\nsld_l9v_prop <- di_sld_l9v %>% \n  summarise(score_prop = sum(score_n, na.rm = TRUE)/32) %>% \n  pull(score_prop)\n\ntotal1 <- di_sld_l9v %>% \n  summarise(total_points = sum(score_n, na.rm = TRUE)) %>%\n  pull(total_points)\n\nsld_l9v_total <- di_sld_l9v %>% \n  summarise(total_points = sum(score_n, na.rm = TRUE)) %>%\n  pull(total_points)\nview(sld_l9v_total)\nview(sld_l9v_prop)\n```\n:::\n\n\n# 2. Dyad 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndi_3bnro4kfnw <- read_csv(\"/Users/zsofiahauk/Desktop/diss_data/dyad_data/di_3bnro4kfnw.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 56 Columns: 27\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): participant_id, partner_id, block, trial_class, training_image, tr...\ndbl  (6): trial_index, time_elapsed, target_pos, response, button_number_sel...\nlgl  (1): testing_check\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ndi_n8tf4dj060 <- read_csv(\"/Users/zsofiahauk/Desktop/diss_data/dyad_data/di_n8tf4dj060.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 56 Columns: 27\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): participant_id, partner_id, block, trial_class, training_image, tr...\ndbl  (6): trial_index, time_elapsed, target_pos, response, button_number_sel...\nlgl  (1): testing_check\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ndi_3bn_n8t <- bind_rows(di_3bnro4kfnw, di_n8tf4dj060) %>% \n  mutate(\n    score = ifelse(target_pos == button_number_selected, \"CORRECT\", \"FALSE\"),\n    score_n = ifelse(target_pos == button_number_selected, 1, 0)\n  )\n\nbn_n8t_prop <- di_3bn_n8t %>% \n  summarise(score_prop = sum(score_n, na.rm = TRUE)/32) %>% \n  pull(score_prop)\n\ntotal2 <- di_3bn_n8t %>% \n  summarise(total_points = sum(score_n, na.rm = TRUE)) %>%\n  pull(total_points)\n\nbn_n8t_total <- di_3bn_n8t %>% \n  summarise(total_points = sum(score_n, na.rm = TRUE)) %>%\n  pull(total_points)\nview(bn_n8t_total)\nview(bn_n8t_prop)\n```\n:::\n\n\n# 3. Dyad 3\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# di_8s7cyryjl0 <- read_csv(\"/Users/zsofiahauk/Desktop/diss_data/dyad_data/di_8s7cyryjl0.csv\")\n# di_bamzqks24l <- read_csv(\"/Users/zsofiahauk/Desktop/diss_data/dyad_data/di_bamzqks24l.csv\")\n\n# di_8s7_bam <- bind_rows(di_8s7cyryjl0, di_bamzqks24l) %>% \n#  mutate(\n#    score = ifelse(target_pos == button_number_selected, \"CORRECT\", \"FALSE\"),\n#    score_n = ifelse(target_pos == button_number_selected, 1, 0)\n#  )\n\n# s7_bam_prop <- di_8s7_bam %>% \n#   summarise(score_prop = sum(score_n, na.rm = TRUE)/32) %>% \n#   pull(score_prop)\n\n# di_8s7cyryjl0 |>\n#   count(target)\n# di_bamzqks24l |>\n#   count(target)\n```\n:::\n\n\n# 4. Dyad 4\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndi_b6s1xf3qgo <- read_csv(\"/Users/zsofiahauk/Desktop/diss_data/dyad_data/di_b6s1xf3qgo.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 56 Columns: 27\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): participant_id, partner_id, block, trial_class, training_image, tr...\ndbl  (6): trial_index, time_elapsed, target_pos, response, button_number_sel...\nlgl  (1): testing_check\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ndi_lp1je60a2r <- read_csv(\"/Users/zsofiahauk/Desktop/diss_data/dyad_data/di_lp1je60a2r.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 56 Columns: 27\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): participant_id, partner_id, block, trial_class, training_image, tr...\ndbl  (6): trial_index, time_elapsed, target_pos, response, button_number_sel...\nlgl  (1): testing_check\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ndi_b6s_lp1 <- bind_rows(di_b6s1xf3qgo, di_lp1je60a2r) %>% \n  mutate(\n    score = ifelse(target_pos == button_number_selected, \"CORRECT\", \"FALSE\"),\n    score_n = ifelse(target_pos == button_number_selected, 1, 0)\n  )\n\nb6s_lp1_prop <- di_b6s_lp1 %>% \n  summarise(score_prop = sum(score_n, na.rm = TRUE)/32) %>% \n  pull(score_prop)\n\ntotal4 <- di_b6s_lp1 %>% \n  summarise(total_points = sum(score_n, na.rm = TRUE)) %>%\n  pull(total_points)\n\nb6s_lp1_total <- di_b6s_lp1 %>% \n  summarise(total_points = sum(score_n, na.rm = TRUE)) %>%\n  pull(total_points)\nview(b6s_lp1_total)\nview(b6s_lp1_prop)\n```\n:::\n\n\n# 5. Dyad 5\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndi_gkgjghqeba <- read_csv(\"/Users/zsofiahauk/Desktop/diss_data/dyad_data/di_gkgjghqeba.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 56 Columns: 27\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): participant_id, partner_id, block, trial_class, training_image, tr...\ndbl  (6): trial_index, time_elapsed, target_pos, response, button_number_sel...\nlgl  (1): testing_check\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ndi_v1mkglj77m <- read_csv(\"/Users/zsofiahauk/Desktop/diss_data/dyad_data/di_v1mkglj77m.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 56 Columns: 27\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): participant_id, partner_id, block, trial_class, training_image, tr...\ndbl  (6): trial_index, time_elapsed, target_pos, response, button_number_sel...\nlgl  (1): testing_check\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ndi_gkg_v1m <- bind_rows(di_gkgjghqeba, di_v1mkglj77m) %>% \n  mutate(\n    score = ifelse(target_pos == button_number_selected, \"CORRECT\", \"FALSE\"),\n    score_n = ifelse(target_pos == button_number_selected, 1, 0)\n  )\n\ngkg_v1m_prop <- di_gkg_v1m %>% \n  summarise(score_prop = sum(score_n, na.rm = TRUE)/32) %>% \n  pull(score_prop)\n\ntotal5 <- di_gkg_v1m %>% \n  summarise(total_points = sum(score_n, na.rm = TRUE)) %>%\n  pull(total_points)\n\ngkg_v1m_total <- di_gkg_v1m %>% \n  summarise(total_points = sum(score_n, na.rm = TRUE)) %>%\n  pull(total_points)\nview(gkg_v1m_total)\nview(gkg_v1m_prop)\n```\n:::\n\n\n# 6. Dyad 6\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndi_y7u85qsqdc <- read_csv(\"/Users/zsofiahauk/Desktop/diss_data/dyad_data/di_y7u85qsqdc.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 56 Columns: 27\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): participant_id, partner_id, block, trial_class, training_image, tr...\ndbl  (6): trial_index, time_elapsed, target_pos, response, button_number_sel...\nlgl  (1): testing_check\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ndi_ypxea5q8fo <- read_csv(\"/Users/zsofiahauk/Desktop/diss_data/dyad_data/di_ypxea5q8fo.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 56 Columns: 27\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): participant_id, partner_id, block, trial_class, training_image, tr...\ndbl  (6): trial_index, time_elapsed, target_pos, response, button_number_sel...\nlgl  (1): testing_check\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ndi_y7u_ypx <- bind_rows(di_y7u85qsqdc, di_ypxea5q8fo) %>% \n  mutate(\n    score = ifelse(target_pos == button_number_selected, \"CORRECT\", \"FALSE\"),\n    score_n = ifelse(target_pos == button_number_selected, 1, 0)\n  )\ny7u_ypx_prop <- di_y7u_ypx %>% \n  summarise(score_prop = sum(score_n, na.rm = TRUE)/32) %>% \n  pull(score_prop)\n\ntotal6 <- di_y7u_ypx %>% \n  summarise(total_points = sum(score_n, na.rm = TRUE)) %>%\n  pull(total_points)\n\ny7u_ypx_total <- di_y7u_ypx %>% \n  summarise(total_points = sum(score_n, na.rm = TRUE)) %>%\n  pull(total_points)\nview(y7u_ypx_total)\nview(y7u_ypx_prop)\n```\n:::\n\n\n# Proportion success\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# prop_df <- tibble(\n#   pair = c('y7u_ypx', 'gkg_v1m', 'b6s_lp1', '8s7_bam', # '3bn_n8t', 'sld_l9v'),\n#   prop = c(y7u_ypx_prop, gkg_v1m_prop, b6s_lp1_prop, # s7_bam_prop, bn_n8t_prop, sld_l9v_prop)\n# )\n\nprop_df <- tibble(\n  pair = c('y7u_ypx', 'gkg_v1m', 'b6s_lp1', '3bn_n8t', 'sld_l9v'),\n  prop = c(y7u_ypx_prop, gkg_v1m_prop, b6s_lp1_prop, bn_n8t_prop, sld_l9v_prop),\n  labels = c(pair)\n)\n```\n:::\n\n\n# Graph success proportion\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprop_df |>\n  ggplot(aes(pair, prop)) +\n  geom_point(alpha=1) +\n  labs(\n    title = \"The Communicative Success of Dyads\",\n    subtitle = \"Communicative success is calculated as a proportion: the number of collected points out of 32.\",\n    caption = \"In the Communication Condition, there were 32 Communication Phase trials. \\n\n    If the receiver selected the sender's target referent (i.e., intended meaning), then the dyad received a score of 1 for that trial. \\n\n    If the receiver selected incorrectly, then the dyad received a score of 0 for that trial.\",\n    x = \"Dyads (paired participants)\",\n    y = \"Proportion of successful trials\"\n  ) +\n  # geom_text(aes(label = c(1, 2, 3, 4, 5), nudge_y = 0)) +\n    theme(axis.text.y = element_blank(),\n        axis.ticks.y = element_blank()) +\n  ylim(0, 1) +\n  theme(\n    plot.caption = element_text(hjust = 0.5),\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5)\n  ) +\n  coord_flip() +\n  NULL\n```\n\n::: {.cell-output-display}\n![](1_files/figure-html/proportion success of every pair-1.png){width=672}\n:::\n\n```{.r .cell-code}\nprop_df |>\n  ggplot(aes(pair, prop, label = labels)) +\n  geom_point(alpha=1) +\n  labs(\n    title = \"The Communicative Success of Dyads\",\n    x = \"Dyads (paired participants)\",\n    y = \"Proportion of successful trials\"\n  ) +\n    geom_label(vjust = 0, nudge_x = 0.1) +\n    theme(axis.text.y = element_blank(),\n        axis.ticks.y = element_blank()) +\n  ylim(0, 1) +\n  theme(\n    plot.caption = element_text(hjust = 0.5),\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5)\n  ) +\n  coord_flip() +\n  NULL\n```\n\n::: {.cell-output-display}\n![](1_files/figure-html/proportion success of every pair-2.png){width=672}\n:::\n:::\n\n\n## Summarise the successful trials\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntotals <- tibble(\n  pair = c('y7u_ypx', 'gkg_v1m', 'b6s_lp1', '3bn_n8t', 'sld_l9v'),\n  total = c(y7u_ypx_total, gkg_v1m_total, b6s_lp1_total, bn_n8t_total, sld_l9v_total)\n)\ntotals\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  pair    total\n  <chr>   <dbl>\n1 y7u_ypx    20\n2 gkg_v1m    10\n3 b6s_lp1    32\n4 3bn_n8t    25\n5 sld_l9v    31\n```\n\n\n:::\n\n```{.r .cell-code}\ntotals %>% \n  summarise(mean = mean(total), n = n(), sd = sd(total))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n   mean     n    sd\n  <dbl> <int> <dbl>\n1  23.6     5  9.02\n```\n\n\n:::\n\n```{.r .cell-code}\ntotals_plot <- totals |>\n  ggplot(aes(pair, total)) +\n  geom_point(alpha=1) +\n  labs(\n    title = \"The Communicative Success of Dyads (collected points)\",\n    x = \"Dyads (paired participants)\",\n    y = \"Collected Points\"\n  ) \ntotals_plot\n```\n\n::: {.cell-output-display}\n![](1_files/figure-html/summarise the successful trials data-1.png){width=672}\n:::\n:::\n\n\n## Specificity\n\n# - Dyads' specificity\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiles_dyads <- list.files(\"/Users/zsofiahauk/Desktop/diss_data/dyad_data/\", full.names = TRUE)\n\ndyads <- read_csv(files_dyads, id = \"file\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 560 Columns: 28\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): participant_id, partner_id, block, trial_class, training_image, tr...\ndbl  (6): trial_index, time_elapsed, target_pos, response, button_number_sel...\nlgl  (1): testing_check\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ndyad_counts <- dyads %>%\n  group_by(participant_id) %>%\n  drop_na(director_label) %>%\n  select(participant_id, director_label) %>%\n  distinct() %>%\n  count(participant_id) %>%\n  mutate(type = \"dyads\")\ndyad_counts\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 3\n# Groups:   participant_id [10]\n   participant_id     n type \n   <chr>          <int> <chr>\n 1 3bnro4kfnw        18 dyads\n 2 b6s1xf3qgo        16 dyads\n 3 gkgjghqeba        27 dyads\n 4 l9vxw70eas        19 dyads\n 5 lp1je60a2r        16 dyads\n 6 n8tf4dj060        18 dyads\n 7 sldmscswrq        19 dyads\n 8 v1mkglj77m        27 dyads\n 9 y7u85qsqdc         4 dyads\n10 ypxea5q8fo         4 dyads\n```\n\n\n:::\n\n```{.r .cell-code}\ndyad_counts_list <- dyads %>%\n  group_by(participant_id) %>%\n  drop_na(director_label) %>%\n  select(participant_id, director_label) %>%\n  distinct() %>%\n  count(participant_id)\ndyad_counts_list\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 2\n# Groups:   participant_id [10]\n   participant_id     n\n   <chr>          <int>\n 1 3bnro4kfnw        18\n 2 b6s1xf3qgo        16\n 3 gkgjghqeba        27\n 4 l9vxw70eas        19\n 5 lp1je60a2r        16\n 6 n8tf4dj060        18\n 7 sldmscswrq        19\n 8 v1mkglj77m        27\n 9 y7u85qsqdc         4\n10 ypxea5q8fo         4\n```\n\n\n:::\n:::\n\n\n# Dyads Spec. with new tibbles\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndyad_counts_tib <- tibble(\n  part = c('y7u_ypx', 'gkg_v1m', 'b6s_lp1', '3bn_n8t', 'sld_l9v'),\n  cats = c(4, 27, 16, 18, 19),\n  labels = c(part),\n  type = c('dyads', 'dyads', 'dyads', 'dyads', 'dyads')\n)\ndyad_counts_tib\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n  part     cats labels  type \n  <chr>   <dbl> <chr>   <chr>\n1 y7u_ypx     4 y7u_ypx dyads\n2 gkg_v1m    27 gkg_v1m dyads\n3 b6s_lp1    16 b6s_lp1 dyads\n4 3bn_n8t    18 3bn_n8t dyads\n5 sld_l9v    19 sld_l9v dyads\n```\n\n\n:::\n\n```{.r .cell-code}\n# dyad_counts_tib %>% \n#  summarise(mean = mean(cats), n = n(), sd = sd(cats))\n\ndyad_counts_tib_iso <- tibble(\n  part = c('y7u', 'ypx', 'gkg', 'v1m', 'b6s', 'lp1', '3bn', 'n8t', 'sld', 'l9v'),\n  cats = c(4, 4, 27, 27, 16, 16, 18, 18, 19, 19),\n  labels = c(part),\n  type = c('dyads', 'dyads', 'dyads', 'dyads', 'dyads', 'dyads', 'dyads', 'dyads', 'dyads', 'dyads')\n)\ndyad_counts_tib_iso\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 4\n   part   cats labels type \n   <chr> <dbl> <chr>  <chr>\n 1 y7u       4 y7u    dyads\n 2 ypx       4 ypx    dyads\n 3 gkg      27 gkg    dyads\n 4 v1m      27 v1m    dyads\n 5 b6s      16 b6s    dyads\n 6 lp1      16 lp1    dyads\n 7 3bn      18 3bn    dyads\n 8 n8t      18 n8t    dyads\n 9 sld      19 sld    dyads\n10 l9v      19 l9v    dyads\n```\n\n\n:::\n\n```{.r .cell-code}\ndyad_counts_tib_iso %>% \n  summarise(mean = mean(cats), n = n(), sd = sd(cats))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n   mean     n    sd\n  <dbl> <int> <dbl>\n1  16.8    10  7.81\n```\n\n\n:::\n:::\n\n\n# - Solos' specificity\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiles_solos <- list.files(\"/Users/zsofiahauk/Desktop/diss_data/solo_data/\", full.names = TRUE)\n\nsolos <- read_csv(files_solos, id = \"file\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 429 Columns: 27\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): participant_id, block, trial_class, training_image, training_label...\ndbl  (3): trial_index, time_elapsed, target_pos\nlgl  (1): testing_check\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nsolos_counts <- solos %>% \n  group_by(participant_id) %>%\n  drop_na(director_label) %>%\n  select(participant_id, director_label) %>% \n  distinct() %>% \n  count(participant_id) %>%\n  mutate(type = \"solo\")\nsolos_counts\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n# Groups:   participant_id [6]\n  participant_id     n type \n  <chr>          <int> <chr>\n1 06vod7xnwc        20 solo \n2 78qejabkuq        16 solo \n3 8jrul385v7        16 solo \n4 cb2hlbmy82        11 solo \n5 m05le2pv5y        16 solo \n6 wpqewv43m0        20 solo \n```\n\n\n:::\n\n```{.r .cell-code}\nsolos_counts_list <- solos %>%\n  group_by(participant_id) %>%\n  drop_na(director_label) %>%\n  select(participant_id, director_label) %>%\n  distinct() %>%\n  count(participant_id)\nsolos_counts_list\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n# Groups:   participant_id [6]\n  participant_id     n\n  <chr>          <int>\n1 06vod7xnwc        20\n2 78qejabkuq        16\n3 8jrul385v7        16\n4 cb2hlbmy82        11\n5 m05le2pv5y        16\n6 wpqewv43m0        20\n```\n\n\n:::\n:::\n\n\n# Solos' Spec, with new tibbles\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsolos_counts_tib <- tibble(\n  part = \n    c('cb2hlbmy82', 'm05le2pv5y', '78qejabkuq', '8jrul385v7', 'wpqewv43m0', '06vod7xnwc'),\n  cats = c(11, 16, 16, 16, 20, 20),\n  labels = c(part),\n  type = c('solo', 'solo', 'solo', 'solo', 'solo', 'solo')\n)\nsolos_counts_tib\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  part        cats labels     type \n  <chr>      <dbl> <chr>      <chr>\n1 cb2hlbmy82    11 cb2hlbmy82 solo \n2 m05le2pv5y    16 m05le2pv5y solo \n3 78qejabkuq    16 78qejabkuq solo \n4 8jrul385v7    16 8jrul385v7 solo \n5 wpqewv43m0    20 wpqewv43m0 solo \n6 06vod7xnwc    20 06vod7xnwc solo \n```\n\n\n:::\n\n```{.r .cell-code}\nsolos_counts_tib %>% \n  summarise(mean = mean(cats), n = n(), sd = sd(cats))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n   mean     n    sd\n  <dbl> <int> <dbl>\n1  16.5     6  3.33\n```\n\n\n:::\n:::\n\n\n## Plotting Specificity, with new tibbles\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsolos_plot_tib <- ggplot(\n  data = solos_counts_tib,\n  mapping = aes(x = solos_counts_tib$part, y = solos_counts_tib$cats)\n) +\n  geom_point()\nsolos_plot_tib\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Use of `solos_counts_tib$part` is discouraged.\nℹ Use `part` instead.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Use of `solos_counts_tib$cats` is discouraged.\nℹ Use `cats` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](1_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n\n```{.r .cell-code}\ndyad_plot_tib <- ggplot(\n  data = dyad_counts_tib_iso,\n  mapping = aes(x = dyad_counts_tib_iso$part, y = dyad_counts_tib_iso$cats)\n) +\n  geom_point()\ndyad_plot_tib\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Use of `dyad_counts_tib_iso$part` is discouraged.\nℹ Use `part` instead.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Use of `dyad_counts_tib_iso$cats` is discouraged.\nℹ Use `cats` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](1_files/figure-html/unnamed-chunk-17-2.png){width=672}\n:::\n\n```{.r .cell-code}\neverything_tib <- rbind(dyad_counts_tib_iso, solos_counts_tib)\n\neverything_plot_dot3_simple_tibs <- ggplot(\n  everything_tib,\n  aes(x = type, y = cats)\n  ) +\n  geom_dotplot(\n    binaxis = 'y', stackdir = 'center', stackratio = 1.5, dotsize = 0.5\n    ) + \n  scale_x_discrete(\"Condition\", labels = c(\"Communication\", \"Isolated\")) +\n  scale_y_continuous(\"Specificity\", limits = c(0, 30))\n\neverything_plot_dot3_simple_tibs + \n  labs(\n    title = \"Specificity of the Final Category Systems across Conditions\") +\n  theme(\n    plot.caption = element_text(hjust = 0.5),\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5)\n  ) +\n  stat_summary(\n    fun.data = \"mean_sdl\", fun.args = list(mult = 1), geom = \"pointrange\", color = \"red\", size = 0.2\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](1_files/figure-html/unnamed-chunk-17-3.png){width=672}\n:::\n\n```{.r .cell-code}\neverything_plot_dot3_simple_tibs\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](1_files/figure-html/unnamed-chunk-17-4.png){width=672}\n:::\n:::\n\n\n## Plotting specificity\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsolos_plot <- ggplot(\n  data = solos_counts_list,\n  mapping = aes(x = solos_counts$participant_id, y = solos_counts$n)\n) +\n  geom_point()\n\ndyad_plot <- ggplot(\n  data = dyad_counts_list,\n  mapping = aes(x = dyad_counts$participant_id, y = dyad_counts$n)\n) +\n  geom_point()\n\neverything <- rbind(dyad_counts, solos_counts)\n\n# everything_plot <- ggplot(\n#   data = everything,\n#   mapping = aes(x = everything$type, y = everything$n)\n# ) +\n#   geom_point()\n# everything_plot\n# \n# everything_plot_dot <- ggplot(\n#   everything, aes(x = everything$type, y = everything$n)) +\n#   geom_dotplot(binaxis = 'y', stackdir = 'center')\n# everything_plot_dot\n# \n# everything_plot_dot2 <- ggplot(\n#   everything, \n#   aes(x = everything$type, y = everything$n)\n#   ) +\n#   geom_dotplot(\n#     binaxis = 'y', stackdir = 'center',\n#     stackratio = 1.5, dotsize = 0.5)\n# everything_plot_dot2\n\neverything_plot_dot3 <- ggplot(\n  everything,\n  aes(x = everything$type, y = everything$n)\n  ) +\n  geom_dotplot(\n    binaxis = 'y', stackdir = 'center', stackratio = 1.5, dotsize = 0.5\n    ) + \n  scale_x_discrete(\"Condition\", labels = c(\"Communication\", \"Isolated\")) +\n  scale_y_continuous(\"Specificity\", limits = c(0, 30))\neverything_plot_dot3 + \n  labs(\n    title = \"Specificity of the Final Category Systems across Conditions\",\n    subtitle = \"Specificity is the number of labels that participants generated over the course of the experiment.\",\n    caption = \"In the Communication Condition, dyads generated ... .\\n In the Isolated Condition, participants generated ... .\\n\"\n  ) +\n  theme(\n    plot.caption = element_text(hjust = 0.5),\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5)\n  ) +\n  stat_summary(\n    fun = \"mean\", geom = \"point\", color = \"red\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](1_files/figure-html/dyads' and solos' specificity-1.png){width=672}\n:::\n\n```{.r .cell-code}\neverything_plot_dot3\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](1_files/figure-html/dyads' and solos' specificity-2.png){width=672}\n:::\n\n```{.r .cell-code}\neverything_plot_dot3_simple <- ggplot(\n  everything,\n  aes(x = everything$type, y = everything$n)\n  ) +\n  geom_dotplot(\n    binaxis = 'y', stackdir = 'center', stackratio = 1.5, dotsize = 0.5\n    ) + \n  scale_x_discrete(\"Condition\", labels = c(\"Communication\", \"Isolated\")) +\n  scale_y_continuous(\"Specificity\", limits = c(0, 30))\neverything_plot_dot3 + \n  labs(\n    title = \"Specificity of the Final Category Systems across Conditions\") +\n  theme(\n    plot.caption = element_text(hjust = 0.5),\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5)\n  ) +\n  stat_summary(\n    fun = \"mean\", geom = \"point\", color = \"red\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](1_files/figure-html/dyads' and solos' specificity-3.png){width=672}\n:::\n\n```{.r .cell-code}\neverything_plot_dot3_simple\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](1_files/figure-html/dyads' and solos' specificity-4.png){width=672}\n:::\n:::\n\n\n## The relationship between communicative success and the number of categories\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# more <- tibble(\n#   pair = c('y7u_ypx', 'gkg_v1m', 'b6s_lp1', '8s7_bam', # '3bn_n8t', 'sld_l9v'),\n#   prop = c(y7u_ypx_prop, gkg_v1m_prop, b6s_lp1_prop, # s7_bam_prop, bn_n8t_prop, sld_l9v_prop),\n#   cats = c(4, 27, 16, 22, 18, 19)\n# )\n# more\n\nmore <- tibble(\n  pair = c('y7u_ypx', 'gkg_v1m', 'b6s_lp1', '3bn_n8t', 'sld_l9v'),\n  prop = c(y7u_ypx_prop, gkg_v1m_prop, b6s_lp1_prop, bn_n8t_prop, sld_l9v_prop),\n  cats = c(4, 27, 16, 18, 19)\n)\nmore\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  pair     prop  cats\n  <chr>   <dbl> <dbl>\n1 y7u_ypx 0.625     4\n2 gkg_v1m 0.312    27\n3 b6s_lp1 1        16\n4 3bn_n8t 0.781    18\n5 sld_l9v 0.969    19\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# One massive scatter plot\nggplot(data = more) +\n  geom_point(mapping = aes(x = prop, y = cats, color = pair))\n```\n\n::: {.cell-output-display}\n![](1_files/figure-html/plotting pairs, prop. success, and the number of categories-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Facet wrapped, one pair displayed in one little section\ncomplexgraph <- ggplot(data = more) +\n  geom_point(mapping = aes(x = prop, y = cats, show.legend = FALSE)) +\n  facet_wrap( ~ pair) +\n  labs(\n    title = \"The Relationship between Dyads' Communicative Success and Specificity\",\n    subtitle = \"Did higher specificity correlate with greater or lesser communicative success?\",\n    caption = \"The first 3 characters of each participant in a dyad are combined to form their dyad name. For example, participants di_sldmscswrq and di_l9vxw70eas create the dyad name, sld_l9v.\\n [insert alternate caption, if needed]\",\n    x = \"Proportion of successful trials (points/32)\",\n    y = \"Specificity\"\n  ) +\n  theme(\n    plot.caption = element_text(hjust = 0.5),\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in geom_point(mapping = aes(x = prop, y = cats, show.legend = FALSE)):\nIgnoring unknown aesthetics: show.legend\n```\n\n\n:::\n\n```{.r .cell-code}\ncomplexgraph\n```\n\n::: {.cell-output-display}\n![](1_files/figure-html/plotting pairs, prop. success, and the number of categories-2.png){width=672}\n:::\n\n```{.r .cell-code}\nsimplegraph <- ggplot(data = more) +\n  geom_point(mapping = aes(x = prop, y = cats, show.legend = FALSE)) +\n  facet_wrap( ~ pair) +\n  labs(\n    title = \"The Relationship between Dyads' Communicative Success and Specificity\",\n    x = \"Proportion of successful trials (points/32)\",\n    y = \"Specificity\"\n  ) +\n  theme(\n    plot.caption = element_text(hjust = 0.5),\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in geom_point(mapping = aes(x = prop, y = cats, show.legend = FALSE)):\nIgnoring unknown aesthetics: show.legend\n```\n\n\n:::\n\n```{.r .cell-code}\nsimplegraph\n```\n\n::: {.cell-output-display}\n![](1_files/figure-html/plotting pairs, prop. success, and the number of categories-3.png){width=672}\n:::\n:::\n\n\n## Is this statistically significant?\n\n\n::: {.cell}\n\n:::\n\n\n## The number of unique labels across time\n\n\n::: {.cell}\n\n:::\n\n\n## Do solos' re-use the same label during the Check Phase?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck <- solos %>% \n  filter(block == \"check\") %>% \n  group_by(participant_id) %>% \n  select(participant_id, block, shuffled_context2, foil2)\nexpansion <- solos %>% \n  filter(block == \"expansion\") %>% \n  group_by(participant_id) %>% \n  select(participant_id, block, target, director_label) \neverything_solos <- rbind(expansion, check)\neverything_solos\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 287 × 6\n# Groups:   participant_id [6]\n   participant_id block     target      director_label shuffled_context2 foil2\n   <chr>          <chr>     <chr>       <chr>          <chr>             <chr>\n 1 06vod7xnwc     expansion blue_blob   kela           <NA>              <NA> \n 2 06vod7xnwc     expansion blue_oval   nonoki         <NA>              <NA> \n 3 06vod7xnwc     expansion red_oval    nonoke         <NA>              <NA> \n 4 06vod7xnwc     expansion blue_rect   monola         <NA>              <NA> \n 5 06vod7xnwc     expansion grey_blob   kiwa           <NA>              <NA> \n 6 06vod7xnwc     expansion yellow_blob kela           <NA>              <NA> \n 7 06vod7xnwc     expansion blue_rect   monola         <NA>              <NA> \n 8 06vod7xnwc     expansion yellow_star lowa           <NA>              <NA> \n 9 06vod7xnwc     expansion yellow_rect monowa         <NA>              <NA> \n10 06vod7xnwc     expansion red_blob    lowa           <NA>              <NA> \n# ℹ 277 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfiles_solos <- list.files(\"/Users/zsofiahauk/Desktop/diss_data/solo_data/\", full.names = TRUE)\nsolos <- read_csv(files_solos, id = \"file\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 429 Columns: 27\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): participant_id, block, trial_class, training_image, training_label...\ndbl  (3): trial_index, time_elapsed, target_pos\nlgl  (1): testing_check\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nchecksolos <- solos %>% \n  filter(block == \"check\") %>% \n  group_by(participant_id) %>% \n  select(participant_id, block, shuffled_context2, foil2)\nexpansionsolos <- solos %>% \n  filter(block == \"expansion\") %>% \n  group_by(participant_id) %>% \n  select(participant_id, block, target, director_label) \n\nnew_solos <- expansionsolos[c('participant_id', 'block', 'target', 'director_label')]\n\nnew_solos2 <- data.frame('participant_id' = checksolos$participant_id,\n                   'block' = checksolos$block,\n                   'target' = checksolos$shuffled_context2,\n                   'director_label' = checksolos$foil2)\n\nnewbetter_solos <- rbind(new_solos, new_solos2) |>\n  group_by(participant_id, block, target) |>\n  mutate(\n    rep = row_number()\n  ) |>\n  unite(\"block\", block, rep)\n\nnewbetter_wider_solos <- newbetter_solos |>\n  pivot_wider(names_from = block, values_from = director_label)\n\nnewbetter_wider_solos <- newbetter_wider_solos |>\n  mutate(\n      e1_e2 = ifelse(expansion_1 == expansion_2, \"SAME\", \"DIFF\"),\n      e2_c1 = ifelse(expansion_2 == check_1, \"SAME\", \"DIFF\")\n  )\n\nnewbetter_longer <- newbetter_wider_solos |>\n  pivot_longer(\n    cols = c(\"e1_e2\", \"e2_c1\"),\n    names_to = \"comparison\",\n    values_to = \"label\"\n  )\n\nnewbetter_longer\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 192 × 7\n# Groups:   participant_id, target [96]\n   participant_id target    expansion_1 expansion_2 check_1 comparison label\n   <chr>          <chr>     <chr>       <chr>       <chr>   <chr>      <chr>\n 1 06vod7xnwc     blue_blob kela        powa        monopo  e1_e2      DIFF \n 2 06vod7xnwc     blue_blob kela        powa        monopo  e2_c1      DIFF \n 3 06vod7xnwc     blue_oval nonoki      kewa        powa    e1_e2      DIFF \n 4 06vod7xnwc     blue_oval nonoki      kewa        powa    e2_c1      DIFF \n 5 06vod7xnwc     red_oval  nonoke      kemo        monola  e1_e2      DIFF \n 6 06vod7xnwc     red_oval  nonoke      kemo        monola  e2_c1      DIFF \n 7 06vod7xnwc     blue_rect monola      monola      lowa    e1_e2      SAME \n 8 06vod7xnwc     blue_rect monola      monola      lowa    e2_c1      DIFF \n 9 06vod7xnwc     grey_blob kiwa        kelo        monoke  e1_e2      DIFF \n10 06vod7xnwc     grey_blob kiwa        kelo        monoke  e2_c1      DIFF \n# ℹ 182 more rows\n```\n\n\n:::\n:::\n\n\n# Plot the SOLOS' SAME and DIFF (stacked, filled bar chart)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnewbetter_longer |>\n  filter(\n    !is.na(label)\n  ) |>\n  ggplot(aes( x = comparison, fill = label)) +\n  geom_bar(position = \"fill\") +\n  facet_wrap( ~ participant_id) +\n  labs(\n    title = \"The Proportion of SAME/DIFFERENT Labels per Target across Phases in the Isolated Condition\",\n    caption = \"During the Expansion Phase, if the second time that a participant saw a target referent, their label matched the first label that they generated for that referent, then their labels were the SAME. If the second time that a participant saw a target referent, their label did not match the first label that they generated for that referent, then their labels were DIFFERENT.\\n\n    During the Check Phase, if the label that the participant selected for that target referent matched the label that they generated for that referent the second time that they saw it, then their labels were the SAME. If the label that the participant selected for that target referent did not match the label that they generated for that referent the second time that they saw it, then the labels were DIFFERENT.\",\n    x = \"Between the 1st and 2nd Exposures, and the 2nd and the 3rd Exposures\",\n    y = \"Proportion of SAME/DIFF Labels\"\n  ) +\n  theme(\n    plot.caption = element_text(hjust = 0.5),\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5)\n  ) +\n  scale_fill_discrete(name = \"Label between Phases for each Target Referent\",\n                      labels = c(\"Different\", \"Same\")) +\n    scale_x_discrete(labels = c(\"e1_e2\" = \"1-2\",\n                                \"e2_c1\" = \"2-3\"))\n```\n\n::: {.cell-output-display}\n![](1_files/figure-html/solos' stacked, filled bar chart-1.png){width=672}\n:::\n\n```{.r .cell-code}\nnewbetter_longer |>\n  filter(\n    !is.na(label)\n  ) |>\n  ggplot(aes( x = comparison, fill = label)) +\n  geom_bar(position = \"fill\") +\n  facet_wrap( ~ participant_id) +\n  labs(\n    title = \"The Proportions of Label Types per Referent across Exposures (Isolated Condition)\",\n    x = \"1st and 2nd exposures (1-2) and 2nd and 3rd exposures (2-3)\",\n    y = \"Proportions of label types\"\n  ) +\n  theme(\n    plot.caption = element_text(hjust = 0.5),\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5)\n  ) +\n  scale_fill_discrete(name = \"Label Types\",\n                      labels = c(\"different\", \"same\")) +\n    scale_x_discrete(labels = c(\"e1_e2\" = \"1-2\",\n                                \"e2_c1\" = \"2-3\"))\n```\n\n::: {.cell-output-display}\n![](1_files/figure-html/solos' stacked, filled bar chart-2.png){width=672}\n:::\n:::\n\n\n#- Pivot longer the SAME/DIFF data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnewbetter_longer <- newbetter_longer |>\n  mutate(\n    Same_num = ifelse(label == \"SAME\", 1, 0)\n  )\nnewbetter_longer\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 192 × 8\n# Groups:   participant_id, target [96]\n   participant_id target    expansion_1 expansion_2 check_1 comparison label\n   <chr>          <chr>     <chr>       <chr>       <chr>   <chr>      <chr>\n 1 06vod7xnwc     blue_blob kela        powa        monopo  e1_e2      DIFF \n 2 06vod7xnwc     blue_blob kela        powa        monopo  e2_c1      DIFF \n 3 06vod7xnwc     blue_oval nonoki      kewa        powa    e1_e2      DIFF \n 4 06vod7xnwc     blue_oval nonoki      kewa        powa    e2_c1      DIFF \n 5 06vod7xnwc     red_oval  nonoke      kemo        monola  e1_e2      DIFF \n 6 06vod7xnwc     red_oval  nonoke      kemo        monola  e2_c1      DIFF \n 7 06vod7xnwc     blue_rect monola      monola      lowa    e1_e2      SAME \n 8 06vod7xnwc     blue_rect monola      monola      lowa    e2_c1      DIFF \n 9 06vod7xnwc     grey_blob kiwa        kelo        monoke  e1_e2      DIFF \n10 06vod7xnwc     grey_blob kiwa        kelo        monoke  e2_c1      DIFF \n# ℹ 182 more rows\n# ℹ 1 more variable: Same_num <dbl>\n```\n\n\n:::\n:::\n\n\n#- Calculate the proportions of SAME/DIFF\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsame_prop <- newbetter_longer |>\n  filter(\n    !is.na(Same_num)\n  ) |>\n  group_by(participant_id) |>\n  summarise(\n    same_prop = sum(Same_num) / n(),\n    .groups = \"drop\"\n  )\nsame_prop\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  participant_id same_prop\n  <chr>              <dbl>\n1 06vod7xnwc         0.219\n2 78qejabkuq         0.467\n3 8jrul385v7         0.844\n4 cb2hlbmy82         0.781\n5 m05le2pv5y         0.969\n6 wpqewv43m0         0.531\n```\n\n\n:::\n\n```{.r .cell-code}\nsame_prop <- newbetter_longer |>\n  filter(\n    !is.na(Same_num)\n  ) |>\n  group_by(participant_id, comparison) |>\n  summarise(\n    same_prop = sum(Same_num) / n(),\n    .groups = \"drop\"\n  )\n\nsame_prop\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 3\n   participant_id comparison same_prop\n   <chr>          <chr>          <dbl>\n 1 06vod7xnwc     e1_e2          0.25 \n 2 06vod7xnwc     e2_c1          0.188\n 3 78qejabkuq     e1_e2          0.6  \n 4 78qejabkuq     e2_c1          0.333\n 5 8jrul385v7     e1_e2          0.812\n 6 8jrul385v7     e2_c1          0.875\n 7 cb2hlbmy82     e1_e2          0.625\n 8 cb2hlbmy82     e2_c1          0.938\n 9 m05le2pv5y     e1_e2          0.938\n10 m05le2pv5y     e2_c1          1    \n11 wpqewv43m0     e1_e2          0.562\n12 wpqewv43m0     e2_c1          0.5  \n```\n\n\n:::\n:::\n\n\n# Plot the SOLOS' SAME/DIFF props (connected dot plot)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsame_prop |>\n  group_by(participant_id, comparison) |>\n  ggplot(aes(comparison, same_prop, colour = participant_id), alpha = 0.2) +\n  geom_line(aes(group = participant_id, comparison), alpha = 0.5) +\n  geom_point() +\n  geom_text(aes(label = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), nudge_y = 0)) \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in geom_text(aes(label = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), :\nIgnoring unknown aesthetics: nudge_y\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](1_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n#- Connected DP practice\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndev_df <- tibble(\n  comparison = c(rep('e1_e2', 3), rep('e2_c1', 3)),\n  prop = c(0.2, 0.3, 0.4, 0.5, 0.8, 0.9),\n  ppt = c(1, 2, 3, 1, 2, 3))\n\nggplot() +\n  geom_point(\n    data = dev_df, \n    aes(x = comparison, y = prop),\n  ) \n```\n\n::: {.cell-output-display}\n![](1_files/figure-html/connected dp practice-1.png){width=672}\n:::\n\n```{.r .cell-code}\ndev_df |>\n  group_by(ppt) |>\n  ggplot(aes(comparison, prop),\n         alpha = 0.2 ) +\n  geom_line(aes(group = ppt),\n            alpha = 0.5) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](1_files/figure-html/connected dp practice-2.png){width=672}\n:::\n:::\n\n\n#- Extra: Did Solo1 re-use the same label?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsolo1 <- read_csv(\"/Users/zsofiahauk/Desktop/diss_data/solo_data/solo_06vod7xnwc.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 72 Columns: 26\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (22): participant_id, block, trial_class, training_image, training_label...\ndbl  (3): trial_index, time_elapsed, target_pos\nlgl  (1): testing_check\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nchecksolo1 <- solo1 %>% \n  filter(block == \"check\") %>% \n  group_by(participant_id) %>% \n  select(participant_id, block, shuffled_context2, foil2)\nexpansionsolo1 <- solo1 %>% \n  filter(block == \"expansion\") %>% \n  group_by(participant_id) %>% \n  select(participant_id, block, target, director_label) \nnew <- expansionsolo1[c('block', 'target', 'director_label')]\nnew2 <- data.frame(\n                   'block' = checksolo1$block,\n                   'target' = checksolo1$shuffled_context2,\n                   'director_label' = checksolo1$foil2)\nnewbetter <- rbind(new, new2) |>\n  group_by(block, target) |>\n  mutate(\n    rep = row_number()\n  ) |>\n  unite(\"block\", block, rep)\nnewbetter_wider <- newbetter |>\n  pivot_wider(names_from = block, values_from = director_label)\nnewbetter_wider %>%\n  mutate(\n      e1_e2 = ifelse(expansion_1 == expansion_2, \"SAME\", \"DIFF\"),\n      e2_c1 = ifelse(expansion_2 == check_1, \"SAME\", \"DIFF\")\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 16 × 6\n# Groups:   target [16]\n   target      expansion_1 expansion_2 check_1 e1_e2 e2_c1\n   <chr>       <chr>       <chr>       <chr>   <chr> <chr>\n 1 blue_blob   kela        powa        monopo  DIFF  DIFF \n 2 blue_oval   nonoki      kewa        powa    DIFF  DIFF \n 3 red_oval    nonoke      kemo        monola  DIFF  DIFF \n 4 blue_rect   monola      monola      lowa    SAME  DIFF \n 5 grey_blob   kiwa        kelo        monoke  DIFF  DIFF \n 6 yellow_blob kela        kewa        kewa    DIFF  SAME \n 7 yellow_star lowa        loki        lono    DIFF  DIFF \n 8 yellow_rect monowa      monoki      monolo  DIFF  DIFF \n 9 red_blob    lowa        monoke      monoke  DIFF  SAME \n10 grey_rect   monopo      monola      monolo  DIFF  DIFF \n11 red_star    lono        lono        loki    SAME  DIFF \n12 yellow_oval pola        monola      kela    DIFF  DIFF \n13 red_rect    monola      monolo      nonoki  DIFF  DIFF \n14 grey_oval   monopo      monolo      monowa  DIFF  DIFF \n15 grey_star   lola        lola        lola    SAME  SAME \n16 blue_star   lonu        lonu        lono    SAME  DIFF \n```\n\n\n:::\n:::\n\n\n# Do dyads' re-use the same label the second time that they see one target?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiles_dyads <- list.files(\"/Users/zsofiahauk/Desktop/diss_data/dyad_data/\", full.names = TRUE)\ndyads <- read_csv(files_dyads, id = \"file\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 560 Columns: 28\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): participant_id, partner_id, block, trial_class, training_image, tr...\ndbl  (6): trial_index, time_elapsed, target_pos, response, button_number_sel...\nlgl  (1): testing_check\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nexpansiondyads <- dyads %>% \n  filter(block == \"interaction\") %>% \n  group_by(participant_id) %>% \n  select(participant_id, block, target, director_label) \nnew_dyads <- expansiondyads[c('participant_id', 'block', 'target', 'director_label')]\n\nnew_dyads <- new_dyads |>\n  group_by(participant_id, block, target) |>\n  mutate(\n    rep = row_number()\n  ) |>\n  unite(\"block\", block, rep)\nnew_dyads\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 320 × 4\n# Groups:   participant_id, target [160]\n   participant_id block         target      director_label\n   <chr>          <chr>         <chr>       <chr>         \n 1 3bnro4kfnw     interaction_1 yellow_star lono          \n 2 3bnro4kfnw     interaction_1 red_star    lono          \n 3 3bnro4kfnw     interaction_1 blue_star   lono          \n 4 3bnro4kfnw     interaction_1 yellow_rect mopola        \n 5 3bnro4kfnw     interaction_1 red_blob    kewa          \n 6 3bnro4kfnw     interaction_1 grey_blob   kewa          \n 7 3bnro4kfnw     interaction_1 grey_oval   nunuki        \n 8 3bnro4kfnw     interaction_1 grey_rect   kewanunuki    \n 9 3bnro4kfnw     interaction_1 yellow_blob kewa          \n10 3bnro4kfnw     interaction_2 grey_oval   nunukinunuki  \n# ℹ 310 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nnewbetter_wider_dyads <- new_dyads |>\n  pivot_wider(names_from = block, values_from = director_label)\n\nnewbetter_wider_dyads <- newbetter_wider_dyads |>\n  mutate(\n      i1_i2 = ifelse(interaction_1 == interaction_2, \"SAME\", \"DIFF\"),\n  )\nnewbetter_wider_dyads\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 160 × 5\n# Groups:   participant_id, target [160]\n   participant_id target      interaction_1 interaction_2 i1_i2\n   <chr>          <chr>       <chr>         <chr>         <chr>\n 1 3bnro4kfnw     yellow_star lono          kewalono      DIFF \n 2 3bnro4kfnw     red_star    lono          lonokewa      DIFF \n 3 3bnro4kfnw     blue_star   lono          lononunupo    DIFF \n 4 3bnro4kfnw     yellow_rect mopola        kewamopola    DIFF \n 5 3bnro4kfnw     red_blob    kewa          lonokewa      DIFF \n 6 3bnro4kfnw     grey_blob   kewa          kewanunuki    DIFF \n 7 3bnro4kfnw     grey_oval   nunuki        nunukinunuki  DIFF \n 8 3bnro4kfnw     grey_rect   kewanunuki    nunukimopola  DIFF \n 9 3bnro4kfnw     yellow_blob kewa          kewa          SAME \n10 3bnro4kfnw     red_rect    lonomopola    lonomopola    SAME \n# ℹ 150 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nnewbetter_longer_dyads <- newbetter_wider_dyads |>\n  pivot_longer(\n    cols = c(\"i1_i2\"),\n    names_to = \"comparison\",\n    values_to = \"label\"\n  )\nnewbetter_longer_dyads\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 160 × 6\n# Groups:   participant_id, target [160]\n   participant_id target      interaction_1 interaction_2 comparison label\n   <chr>          <chr>       <chr>         <chr>         <chr>      <chr>\n 1 3bnro4kfnw     yellow_star lono          kewalono      i1_i2      DIFF \n 2 3bnro4kfnw     red_star    lono          lonokewa      i1_i2      DIFF \n 3 3bnro4kfnw     blue_star   lono          lononunupo    i1_i2      DIFF \n 4 3bnro4kfnw     yellow_rect mopola        kewamopola    i1_i2      DIFF \n 5 3bnro4kfnw     red_blob    kewa          lonokewa      i1_i2      DIFF \n 6 3bnro4kfnw     grey_blob   kewa          kewanunuki    i1_i2      DIFF \n 7 3bnro4kfnw     grey_oval   nunuki        nunukinunuki  i1_i2      DIFF \n 8 3bnro4kfnw     grey_rect   kewanunuki    nunukimopola  i1_i2      DIFF \n 9 3bnro4kfnw     yellow_blob kewa          kewa          i1_i2      SAME \n10 3bnro4kfnw     red_rect    lonomopola    lonomopola    i1_i2      SAME \n# ℹ 150 more rows\n```\n\n\n:::\n:::\n\n\n# Plot the DYADS' SAME and DIFF (stacked, filled bar chart)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnewbetter_longer_dyads |>\n  filter(\n    !is.na(label)\n  ) |>\n  ggplot(aes( x = comparison, fill = label)) +\n  geom_bar(position = \"fill\") +\n  facet_wrap( ~ participant_id) +\n    labs(\n    title = \"The Proportion of SAME/DIFFERENT Labels per Target across Phases in the Communication Condition\",\n    caption = \"During the Communication Phase, if the second time that a dyad saw a target referent, the director's label for that trial matched the first label that the pair generated for that referent, then the labels were the SAME. If the labels did not match, then they were DIFFERENT.\\n\n    During the Check Phase, if the label that the participant selected for that target referent matched the label that they generated for that referent the second time that they saw it, then their labels were the SAME. If the label that the participant selected for that target referent did not match the label that they generated for that referent the second time that they saw it, then the labels were DIFFERENT.\",\n    x = \"Between the 1st and 2nd Exposures\",\n    y = \"Proportion of SAME/DIFF Labels\"\n  ) +\n  theme(\n    plot.caption = element_text(hjust = 0.5),\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5)\n  ) +\n  scale_fill_discrete(name = \"Label between Phases for each Target Referent\",\n                      labels = c(\"Different\", \"Same\")) +\n  scale_x_discrete(labels = c(\"i1_i2\" = \"1-2\"))\n```\n\n::: {.cell-output-display}\n![](1_files/figure-html/dyads' stacked, filled bar chart-1.png){width=672}\n:::\n:::\n\n\n#- Pivot longer the SAME/DIFF data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnewbetter_longer_dyads <- newbetter_longer_dyads |>\n  mutate(\n    Same_num = ifelse(label == \"SAME\", 1, 0)\n  )\nnewbetter_longer_dyads\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 160 × 7\n# Groups:   participant_id, target [160]\n   participant_id target   interaction_1 interaction_2 comparison label Same_num\n   <chr>          <chr>    <chr>         <chr>         <chr>      <chr>    <dbl>\n 1 3bnro4kfnw     yellow_… lono          kewalono      i1_i2      DIFF         0\n 2 3bnro4kfnw     red_star lono          lonokewa      i1_i2      DIFF         0\n 3 3bnro4kfnw     blue_st… lono          lononunupo    i1_i2      DIFF         0\n 4 3bnro4kfnw     yellow_… mopola        kewamopola    i1_i2      DIFF         0\n 5 3bnro4kfnw     red_blob kewa          lonokewa      i1_i2      DIFF         0\n 6 3bnro4kfnw     grey_bl… kewa          kewanunuki    i1_i2      DIFF         0\n 7 3bnro4kfnw     grey_ov… nunuki        nunukinunuki  i1_i2      DIFF         0\n 8 3bnro4kfnw     grey_re… kewanunuki    nunukimopola  i1_i2      DIFF         0\n 9 3bnro4kfnw     yellow_… kewa          kewa          i1_i2      SAME         1\n10 3bnro4kfnw     red_rect lonomopola    lonomopola    i1_i2      SAME         1\n# ℹ 150 more rows\n```\n\n\n:::\n:::\n\n\n#- Calculate the proportions of SAME/DIFF\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsame_prop_dyads <- newbetter_longer_dyads |>\n  filter(\n    !is.na(Same_num)\n  ) |>\n  group_by(participant_id, comparison) |>\n  summarise(\n    same_prop_dyads = sum(Same_num) / n(),\n    .groups = \"drop\"\n  )\nsame_prop_dyads\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 3\n   participant_id comparison same_prop_dyads\n   <chr>          <chr>                <dbl>\n 1 3bnro4kfnw     i1_i2               0.125 \n 2 b6s1xf3qgo     i1_i2               0.0625\n 3 gkgjghqeba     i1_i2               0     \n 4 l9vxw70eas     i1_i2               0.812 \n 5 lp1je60a2r     i1_i2               0.0625\n 6 n8tf4dj060     i1_i2               0.125 \n 7 sldmscswrq     i1_i2               0.812 \n 8 v1mkglj77m     i1_i2               0     \n 9 y7u85qsqdc     i1_i2               0.5   \n10 ypxea5q8fo     i1_i2               0.5   \n```\n\n\n:::\n:::\n\n\n# Plot the DYADS' SAME/DIFF props (connected dot plot) LOLZ, not a connected dot plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsame_prop_dyads |>\n  group_by(participant_id, comparison) |>\n  ggplot(aes(comparison, same_prop_dyads), alpha = 0.2) +\n  geom_line(aes(group = participant_id, comparison), alpha = 0.5) +\n  geom_point() \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](1_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsame_prop_dyads |>\n  group_by(participant_id, comparison) |>\n  ggplot(aes(comparison, same_prop_dyads), alpha = 0.2) +\n    geom_dotplot(\n    binaxis = 'y', stackdir = 'center', stackratio = 1.5, dotsize = 0.5\n    ) +\n    geom_label(vjust = 0, nudge_x = 0.1, label = same_prop_dyads$participant_id) +\n    theme(axis.text.y = element_blank(),\n        axis.ticks.y = element_blank()) +\n  ylim(0, 1) +\n  theme(\n    plot.caption = element_text(hjust = 0.5),\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](1_files/figure-html/unnamed-chunk-35-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}